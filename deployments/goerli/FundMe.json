{
  "address": "0x0e3e10E497d7CD9da5bE8512Fe1b0285611E31bB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8af566b0aa47ab7bded121bd36c9b7eb61e8e10647b6b1d6d18565273e99e83b",
  "receipt": {
    "to": null,
    "from": "0x952101266790A8F9815b3DAfEf6941bf7b4EE306",
    "contractAddress": "0x0e3e10E497d7CD9da5bE8512Fe1b0285611E31bB",
    "transactionIndex": 21,
    "gasUsed": "902632",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x3a143e6864f552fc54762cb6e986b42e62e596ba573d4ebdf7cec78d8bedb4fd",
    "transactionHash": "0x8af566b0aa47ab7bded121bd36c9b7eb61e8e10647b6b1d6d18565273e99e83b",
    "logs": [],
    "blockNumber": 7676591,
    "cumulativeGasUsed": "3619358",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "53d5320904a7a6176f26d98de229c296",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address public i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender; // whoever has deployed the contract will be set as the owner.\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // This function moves (sends) ETH so must be marked as payable.\\n    function fund() public payable {\\n        // check if the amount being funded is more than the minimum_usd amount\\n        require(\\n            msg.value.getConversionRate(priceFeed) > MINIMUM_USD,\\n            \\\"Must send at least 50 USD in ETH.\\\"\\n        ); // TODO: sort this out...\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    // Can only be invoked successfully by the owner of the contract\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIdx = 0; funderIdx < funders.length; funderIdx++) {\\n            address funder = funders[funderIdx];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool isSuccessful, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(isSuccessful, \\\"Transaction was unsuccessful\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _; // run code after condition\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x88ba64577ab95ef5d694a8d72ccc32dcf0e58bfef4af012e2a0442830ad8fc38\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xd34f101d70d453707cedee202a3dc80def634098f6fa0d13da5b41cc85498d3e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000fe638038062000fe6833981810160405281019061003491906100d1565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b6000815190506100cb81610135565b92915050565b6000602082840312156100e7576100e6610130565b5b60006100f5848285016100bc565b91505092915050565b600061010982610110565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61013e816100fe565b811461014957600080fd5b50565b610e8a806200015c6000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a14610107578063b60d428814610132578063dba6335f1461013c578063dc0d3dff1461016757610083565b80633ccfd60b146100885780633e47d6f31461009f5780636b69a592146100dc57610083565b36610083576100816101a4565b005b600080fd5b34801561009457600080fd5b5061009d6102de565b005b3480156100ab57600080fd5b506100c660048036038101906100c191906107bc565b610520565b6040516100d391906109b2565b60405180910390f35b3480156100e857600080fd5b506100f1610538565b6040516100fe91906109b2565b60405180910390f35b34801561011357600080fd5b5061011c610545565b6040516101299190610957565b60405180910390f35b61013a6101a4565b005b34801561014857600080fd5b5061015161056b565b60405161015e919061093c565b60405180910390f35b34801561017357600080fd5b5061018e600480360381019061018991906107e9565b610591565b60405161019b919061093c565b60405180910390f35b6802b5e3af16b18800006101e3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d090919063ffffffff16565b11610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a90610972565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027291906109e9565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610365576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041057600080828154811061038a57610389610d1a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040890610c73565b915050610368565b50600067ffffffffffffffff81111561042c5761042b610d49565b5b60405190808252806020026020018201604052801561045a5781602001602082028036833780820191505090505b50600090805190602001906104709291906106ac565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049790610927565b60006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b505090508061051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610992565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081815481106105a157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105dc8361060c565b90506000670de0b6b3a764000085836105f59190610b87565b6105ff9190610a3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610816565b5050509150506402540be400816106a49190610a70565b915050919050565b828054828255906000526020600020908101928215610725579160200282015b828111156107245782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cc565b5b5090506107329190610736565b5090565b5b8082111561074f576000816000905550600101610737565b5090565b60008135905061076281610df8565b92915050565b60008151905061077781610e0f565b92915050565b60008135905061078c81610e26565b92915050565b6000815190506107a181610e26565b92915050565b6000815190506107b681610e3d565b92915050565b6000602082840312156107d2576107d1610d78565b5b60006107e084828501610753565b91505092915050565b6000602082840312156107ff576107fe610d78565b5b600061080d8482850161077d565b91505092915050565b600080600080600060a0868803121561083257610831610d78565b5b6000610840888289016107a7565b955050602061085188828901610768565b945050604061086288828901610792565b935050606061087388828901610792565b9250506080610884888289016107a7565b9150509295509295909350565b61089a81610be1565b82525050565b6108a981610c3d565b82525050565b60006108bc6021836109d8565b91506108c782610d7d565b604082019050919050565b60006108df601c836109d8565b91506108ea82610dcc565b602082019050919050565b60006109026000836109cd565b915061090d82610df5565b600082019050919050565b61092181610c1d565b82525050565b6000610932826108f5565b9150819050919050565b60006020820190506109516000830184610891565b92915050565b600060208201905061096c60008301846108a0565b92915050565b6000602082019050818103600083015261098b816108af565b9050919050565b600060208201905081810360008301526109ab816108d2565b9050919050565b60006020820190506109c76000830184610918565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f482610c1d565b91506109ff83610c1d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3457610a33610cbc565b5b828201905092915050565b6000610a4a82610c1d565b9150610a5583610c1d565b925082610a6557610a64610ceb565b5b828204905092915050565b6000610a7b82610bf3565b9150610a8683610bf3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ac557610ac4610cbc565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b0257610b01610cbc565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b3f57610b3e610cbc565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b7c57610b7b610cbc565b5b828202905092915050565b6000610b9282610c1d565b9150610b9d83610c1d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd657610bd5610cbc565b5b828202905092915050565b6000610bec82610bfd565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c4882610c4f565b9050919050565b6000610c5a82610c61565b9050919050565b6000610c6c82610bfd565b9050919050565b6000610c7e82610c1d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb157610cb0610cbc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4d7573742073656e64206174206c656173742035302055534420696e2045544860008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73616374696f6e2077617320756e7375636365737366756c00000000600082015250565b50565b610e0181610be1565b8114610e0c57600080fd5b50565b610e1881610bf3565b8114610e2357600080fd5b50565b610e2f81610c1d565b8114610e3a57600080fd5b50565b610e4681610c27565b8114610e5157600080fd5b5056fea2646970667358221220d17d1f77e79861d0423a658ae3e236eeb48678859fb0d306c1ec4c399ab1036f64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a14610107578063b60d428814610132578063dba6335f1461013c578063dc0d3dff1461016757610083565b80633ccfd60b146100885780633e47d6f31461009f5780636b69a592146100dc57610083565b36610083576100816101a4565b005b600080fd5b34801561009457600080fd5b5061009d6102de565b005b3480156100ab57600080fd5b506100c660048036038101906100c191906107bc565b610520565b6040516100d391906109b2565b60405180910390f35b3480156100e857600080fd5b506100f1610538565b6040516100fe91906109b2565b60405180910390f35b34801561011357600080fd5b5061011c610545565b6040516101299190610957565b60405180910390f35b61013a6101a4565b005b34801561014857600080fd5b5061015161056b565b60405161015e919061093c565b60405180910390f35b34801561017357600080fd5b5061018e600480360381019061018991906107e9565b610591565b60405161019b919061093c565b60405180910390f35b6802b5e3af16b18800006101e3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d090919063ffffffff16565b11610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a90610972565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027291906109e9565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610365576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041057600080828154811061038a57610389610d1a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040890610c73565b915050610368565b50600067ffffffffffffffff81111561042c5761042b610d49565b5b60405190808252806020026020018201604052801561045a5781602001602082028036833780820191505090505b50600090805190602001906104709291906106ac565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049790610927565b60006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b505090508061051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610992565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081815481106105a157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105dc8361060c565b90506000670de0b6b3a764000085836105f59190610b87565b6105ff9190610a3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610816565b5050509150506402540be400816106a49190610a70565b915050919050565b828054828255906000526020600020908101928215610725579160200282015b828111156107245782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cc565b5b5090506107329190610736565b5090565b5b8082111561074f576000816000905550600101610737565b5090565b60008135905061076281610df8565b92915050565b60008151905061077781610e0f565b92915050565b60008135905061078c81610e26565b92915050565b6000815190506107a181610e26565b92915050565b6000815190506107b681610e3d565b92915050565b6000602082840312156107d2576107d1610d78565b5b60006107e084828501610753565b91505092915050565b6000602082840312156107ff576107fe610d78565b5b600061080d8482850161077d565b91505092915050565b600080600080600060a0868803121561083257610831610d78565b5b6000610840888289016107a7565b955050602061085188828901610768565b945050604061086288828901610792565b935050606061087388828901610792565b9250506080610884888289016107a7565b9150509295509295909350565b61089a81610be1565b82525050565b6108a981610c3d565b82525050565b60006108bc6021836109d8565b91506108c782610d7d565b604082019050919050565b60006108df601c836109d8565b91506108ea82610dcc565b602082019050919050565b60006109026000836109cd565b915061090d82610df5565b600082019050919050565b61092181610c1d565b82525050565b6000610932826108f5565b9150819050919050565b60006020820190506109516000830184610891565b92915050565b600060208201905061096c60008301846108a0565b92915050565b6000602082019050818103600083015261098b816108af565b9050919050565b600060208201905081810360008301526109ab816108d2565b9050919050565b60006020820190506109c76000830184610918565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f482610c1d565b91506109ff83610c1d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3457610a33610cbc565b5b828201905092915050565b6000610a4a82610c1d565b9150610a5583610c1d565b925082610a6557610a64610ceb565b5b828204905092915050565b6000610a7b82610bf3565b9150610a8683610bf3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ac557610ac4610cbc565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b0257610b01610cbc565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b3f57610b3e610cbc565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b7c57610b7b610cbc565b5b828202905092915050565b6000610b9282610c1d565b9150610b9d83610c1d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd657610bd5610cbc565b5b828202905092915050565b6000610bec82610bfd565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c4882610c4f565b9050919050565b6000610c5a82610c61565b9050919050565b6000610c6c82610bfd565b9050919050565b6000610c7e82610c1d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb157610cb0610cbc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4d7573742073656e64206174206c656173742035302055534420696e2045544860008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73616374696f6e2077617320756e7375636365737366756c00000000600082015250565b50565b610e0181610be1565b8114610e0c57600080fd5b50565b610e1881610bf3565b8114610e2357600080fd5b50565b610e2f81610c1d565b8114610e3a57600080fd5b50565b610e4681610c27565b8114610e5157600080fd5b5056fea2646970667358221220d17d1f77e79861d0423a658ae3e236eeb48678859fb0d306c1ec4c399ab1036f64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}